"""
Do Not Edit this file. You may and are encouraged to look at it for reference.
"""

import unittest
import math
import ship
import bullet

class TestShipFire( unittest.TestCase ):

    def setUp( self ):
        self.expected_x = 100
        self.expected_y = 200
        self.expected_dx = 0.0
        self.expected_dy = 0.0
        self.expected_rotation = 0
        self.expected_world_width = 600
        self.expected_world_height = 400

        self.constructed_obj = ship.Ship( self.expected_x, self.expected_y, self.expected_world_width, self.expected_world_height )
        
        return

    def tearDown( self ):
        return

    def test001_fireCreatesBullet( self ):
        b = self.constructed_obj.fire( )
        self.assertEqual( isinstance( b, bullet.Bullet ), True )
        return
    
    def test002_fireBulletLocatedCorrectly( self ):
        outline = self.constructed_obj.getPolygon( )
        gun = self.constructed_obj.rotateAndTranslatePoint( outline[ 0 ][ 0 ], outline[ 0 ][ 1 ] )
        expected_x = gun[ 0 ]
        expected_y = gun[ 1 ]
        b = self.constructed_obj.fire( )

        distance = math.sqrt( ( b.getX( ) - expected_x ) ** 2 + ( b.getY( ) - expected_y ) ** 2 )
        self.assertAlmostEqual( distance, 10.0 )
        return
    
    def test003_fireBulletSpeedCorrect( self ):
        dx = self.constructed_obj.getDX( )
        dy = self.constructed_obj.getDY( )
        b = self.constructed_obj.fire( )

        speed_difference = math.sqrt( ( b.getDX( ) - dx ) ** 2 + ( b.getDY( ) - dy ) ** 2 )
        self.assertAlmostEqual( speed_difference, 100.0 )
        return
    
    def test004_fireBulletRotatedCorrectly( self ):
        expected_rotation = self.constructed_obj.getRotation( )
        b = self.constructed_obj.fire( )

        self.assertAlmostEqual( b.getRotation( ), expected_rotation )
        return
    
   
def suite( ):
    return unittest.TestLoader( ).loadTestsFromTestCase( TestShipFire )

if __name__ == '__main__':
    runner = unittest.TextTestRunner( )
    runner.run( suite( ) )
